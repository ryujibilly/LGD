
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.8669
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 此类由工具生成并可能分离数据实体类，要修改得注意!
// 创 建 人: SBW
// 创建日期: 2017/9/4 15:22:18
// 
namespace LGD.WebService
{
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    using LGD.Entity;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    //[System.Web.Services.WebServiceBindingAttribute(Name="realdbservicesSoap11Binding", Namespace="http://services.realdb.lead")]
    [System.Web.Services.WebServiceBindingAttribute(Name="realdbservicesSoap11Binding", Namespace= "http://10.242.0.241:8080/realdb/services/realdbservices")]
    
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceBase))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Exception))]
    public partial class realdbservices : System.Web.Services.Protocols.SoapHttpClientProtocol
    {
        
        private System.Threading.SendOrPostCallback GetAllRegionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSuccessStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIndexRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWellInfoServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddWellOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegionInfoServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstInfoByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddInstInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddRegionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllWellsByRegionIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllInstNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLogInfoServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWitsMetaDataServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRealDataServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserValidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllLogsByWellIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadCurveDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetErrorStrOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteInstDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback WriteCurveDataOperationCompleted;
        
        /// <remarks/>
        public realdbservices()
        {
            //http://10.242.0.241:8080/realdb/services/realdbservices
            //this.Url = "http://127.0.0.1/realdb/services/realdbservices.realdbservicesHttpSoap11Endpoint/" +"";
            this.Url = "http://10.242.0.241:8080/realdb/services/realdbservices" + "";
        }
        
        /// <remarks/>
        public event GetAllRegionsCompletedEventHandler GetAllRegionsCompleted;
        
        /// <remarks/>
        public event AddLogCompletedEventHandler AddLogCompleted;
        
        /// <remarks/>
        public event GetSuccessStrCompletedEventHandler GetSuccessStrCompleted;
        
        /// <remarks/>
        public event GetIndexRangeCompletedEventHandler GetIndexRangeCompleted;
        
        /// <remarks/>
        public event GetWellInfoServiceCompletedEventHandler GetWellInfoServiceCompleted;
        
        /// <remarks/>
        public event AddWellCompletedEventHandler AddWellCompleted;
        
        /// <remarks/>
        public event GetRegionInfoServiceCompletedEventHandler GetRegionInfoServiceCompleted;
        
        /// <remarks/>
        public event GetInstInfoByNameCompletedEventHandler GetInstInfoByNameCompleted;
        
        /// <remarks/>
        public event AddInstInfoCompletedEventHandler AddInstInfoCompleted;
        
        /// <remarks/>
        public event AddRegionCompletedEventHandler AddRegionCompleted;
        
        /// <remarks/>
        public event GetAllWellsByRegionIdCompletedEventHandler GetAllWellsByRegionIdCompleted;
        
        /// <remarks/>
        public event GetAllInstNameCompletedEventHandler GetAllInstNameCompleted;
        
        /// <remarks/>
        public event GetUserServiceCompletedEventHandler GetUserServiceCompleted;
        
        /// <remarks/>
        public event GetLogInfoServiceCompletedEventHandler GetLogInfoServiceCompleted;
        
        /// <remarks/>
        public event GetWitsMetaDataServiceCompletedEventHandler GetWitsMetaDataServiceCompleted;
        
        /// <remarks/>
        public event GetRealDataServiceCompletedEventHandler GetRealDataServiceCompleted;
        
        /// <remarks/>
        public event UserValidCompletedEventHandler UserValidCompleted;
        
        /// <remarks/>
        public event GetAllLogsByWellIdCompletedEventHandler GetAllLogsByWellIdCompleted;
        
        /// <remarks/>
        public event ReadCurveDataCompletedEventHandler ReadCurveDataCompleted;
        
        /// <remarks/>
        public event GetErrorStrCompletedEventHandler GetErrorStrCompleted;
        
        /// <remarks/>
        public event DeleteInstDataCompletedEventHandler DeleteInstDataCompleted;
        
        /// <remarks/>
        public event WriteCurveDataCompletedEventHandler WriteCurveDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetAllRegions", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetAllRegions([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("GetAllRegions", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllRegions(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllRegions", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetAllRegions(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRegionsAsync(string strJson)
        {
            this.GetAllRegionsAsync(strJson, null);
        }
        
        /// <remarks/>
        public void GetAllRegionsAsync(string strJson, object userState)
        {
            if ((this.GetAllRegionsOperationCompleted == null))
            {
                this.GetAllRegionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRegionsOperationCompleted);
            }
            this.InvokeAsync("GetAllRegions", new object[] {
                        strJson}, this.GetAllRegionsOperationCompleted, userState);
        }
        
        private void OnGetAllRegionsOperationCompleted(object arg)
        {
            if ((this.GetAllRegionsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRegionsCompleted(this, new GetAllRegionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:AddLog", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string AddLog([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("AddLog", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddLog(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddLog", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddLog(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddLogAsync(string strJson)
        {
            this.AddLogAsync(strJson, null);
        }
        
        /// <remarks/>
        public void AddLogAsync(string strJson, object userState)
        {
            if ((this.AddLogOperationCompleted == null))
            {
                this.AddLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddLogOperationCompleted);
            }
            this.InvokeAsync("AddLog", new object[] {
                        strJson}, this.AddLogOperationCompleted, userState);
        }
        
        private void OnAddLogOperationCompleted(object arg)
        {
            if ((this.AddLogCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddLogCompleted(this, new AddLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetSuccessStr", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetSuccessStr([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strMsg)
        {
            object[] results = this.Invoke("GetSuccessStr", new object[] {
                        strMsg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSuccessStr(string strMsg, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSuccessStr", new object[] {
                        strMsg}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetSuccessStr(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSuccessStrAsync(string strMsg)
        {
            this.GetSuccessStrAsync(strMsg, null);
        }
        
        /// <remarks/>
        public void GetSuccessStrAsync(string strMsg, object userState)
        {
            if ((this.GetSuccessStrOperationCompleted == null))
            {
                this.GetSuccessStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSuccessStrOperationCompleted);
            }
            this.InvokeAsync("GetSuccessStr", new object[] {
                        strMsg}, this.GetSuccessStrOperationCompleted, userState);
        }
        
        private void OnGetSuccessStrOperationCompleted(object arg)
        {
            if ((this.GetSuccessStrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSuccessStrCompleted(this, new GetSuccessStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetIndexRange", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetIndexRange([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("GetIndexRange", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetIndexRange(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetIndexRange", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetIndexRange(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIndexRangeAsync(string strJson)
        {
            this.GetIndexRangeAsync(strJson, null);
        }
        
        /// <remarks/>
        public void GetIndexRangeAsync(string strJson, object userState)
        {
            if ((this.GetIndexRangeOperationCompleted == null))
            {
                this.GetIndexRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIndexRangeOperationCompleted);
            }
            this.InvokeAsync("GetIndexRange", new object[] {
                        strJson}, this.GetIndexRangeOperationCompleted, userState);
        }
        
        private void OnGetIndexRangeOperationCompleted(object arg)
        {
            if ((this.GetIndexRangeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIndexRangeCompleted(this, new GetIndexRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetWellInfoService", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public WellInfoService GetWellInfoService()
        {
            object[] results = this.Invoke("GetWellInfoService", new object[0]);
            return ((WellInfoService)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWellInfoService(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetWellInfoService", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public WellInfoService EndGetWellInfoService(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((WellInfoService)(results[0]));
        }
        
        /// <remarks/>
        public void GetWellInfoServiceAsync()
        {
            this.GetWellInfoServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetWellInfoServiceAsync(object userState)
        {
            if ((this.GetWellInfoServiceOperationCompleted == null))
            {
                this.GetWellInfoServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWellInfoServiceOperationCompleted);
            }
            this.InvokeAsync("GetWellInfoService", new object[0], this.GetWellInfoServiceOperationCompleted, userState);
        }
        
        private void OnGetWellInfoServiceOperationCompleted(object arg)
        {
            if ((this.GetWellInfoServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWellInfoServiceCompleted(this, new GetWellInfoServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:AddWell", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string AddWell([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("AddWell", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddWell(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddWell", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddWell(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddWellAsync(string strJson)
        {
            this.AddWellAsync(strJson, null);
        }
        
        /// <remarks/>
        public void AddWellAsync(string strJson, object userState)
        {
            if ((this.AddWellOperationCompleted == null))
            {
                this.AddWellOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddWellOperationCompleted);
            }
            this.InvokeAsync("AddWell", new object[] {
                        strJson}, this.AddWellOperationCompleted, userState);
        }
        
        private void OnAddWellOperationCompleted(object arg)
        {
            if ((this.AddWellCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddWellCompleted(this, new AddWellCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetRegionInfoService", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public RegionService GetRegionInfoService()
        {
            object[] results = this.Invoke("GetRegionInfoService", new object[0]);
            return ((RegionService)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRegionInfoService(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRegionInfoService", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public RegionService EndGetRegionInfoService(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((RegionService)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegionInfoServiceAsync()
        {
            this.GetRegionInfoServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetRegionInfoServiceAsync(object userState)
        {
            if ((this.GetRegionInfoServiceOperationCompleted == null))
            {
                this.GetRegionInfoServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegionInfoServiceOperationCompleted);
            }
            this.InvokeAsync("GetRegionInfoService", new object[0], this.GetRegionInfoServiceOperationCompleted, userState);
        }
        
        private void OnGetRegionInfoServiceOperationCompleted(object arg)
        {
            if ((this.GetRegionInfoServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegionInfoServiceCompleted(this, new GetRegionInfoServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetInstInfoByName", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetInstInfoByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("GetInstInfoByName", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInstInfoByName(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetInstInfoByName", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetInstInfoByName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstInfoByNameAsync(string strJson)
        {
            this.GetInstInfoByNameAsync(strJson, null);
        }
        
        /// <remarks/>
        public void GetInstInfoByNameAsync(string strJson, object userState)
        {
            if ((this.GetInstInfoByNameOperationCompleted == null))
            {
                this.GetInstInfoByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstInfoByNameOperationCompleted);
            }
            this.InvokeAsync("GetInstInfoByName", new object[] {
                        strJson}, this.GetInstInfoByNameOperationCompleted, userState);
        }
        
        private void OnGetInstInfoByNameOperationCompleted(object arg)
        {
            if ((this.GetInstInfoByNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstInfoByNameCompleted(this, new GetInstInfoByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:AddInstInfo", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string AddInstInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("AddInstInfo", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddInstInfo(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddInstInfo", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddInstInfo(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddInstInfoAsync(string strJson)
        {
            this.AddInstInfoAsync(strJson, null);
        }
        
        /// <remarks/>
        public void AddInstInfoAsync(string strJson, object userState)
        {
            if ((this.AddInstInfoOperationCompleted == null))
            {
                this.AddInstInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddInstInfoOperationCompleted);
            }
            this.InvokeAsync("AddInstInfo", new object[] {
                        strJson}, this.AddInstInfoOperationCompleted, userState);
        }
        
        private void OnAddInstInfoOperationCompleted(object arg)
        {
            if ((this.AddInstInfoCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddInstInfoCompleted(this, new AddInstInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:AddRegion", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string AddRegion([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("AddRegion", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddRegion(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddRegion", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndAddRegion(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddRegionAsync(string strJson)
        {
            this.AddRegionAsync(strJson, null);
        }
        
        /// <remarks/>
        public void AddRegionAsync(string strJson, object userState)
        {
            if ((this.AddRegionOperationCompleted == null))
            {
                this.AddRegionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddRegionOperationCompleted);
            }
            this.InvokeAsync("AddRegion", new object[] {
                        strJson}, this.AddRegionOperationCompleted, userState);
        }
        
        private void OnAddRegionOperationCompleted(object arg)
        {
            if ((this.AddRegionCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddRegionCompleted(this, new AddRegionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetAllWellsByRegionId", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetAllWellsByRegionId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("GetAllWellsByRegionId", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllWellsByRegionId(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllWellsByRegionId", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetAllWellsByRegionId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllWellsByRegionIdAsync(string strJson)
        {
            this.GetAllWellsByRegionIdAsync(strJson, null);
        }
        
        /// <remarks/>
        public void GetAllWellsByRegionIdAsync(string strJson, object userState)
        {
            if ((this.GetAllWellsByRegionIdOperationCompleted == null))
            {
                this.GetAllWellsByRegionIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllWellsByRegionIdOperationCompleted);
            }
            this.InvokeAsync("GetAllWellsByRegionId", new object[] {
                        strJson}, this.GetAllWellsByRegionIdOperationCompleted, userState);
        }
        
        private void OnGetAllWellsByRegionIdOperationCompleted(object arg)
        {
            if ((this.GetAllWellsByRegionIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllWellsByRegionIdCompleted(this, new GetAllWellsByRegionIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetAllInstName", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetAllInstName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("GetAllInstName", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllInstName(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllInstName", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetAllInstName(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllInstNameAsync(string strJson)
        {
            this.GetAllInstNameAsync(strJson, null);
        }
        
        /// <remarks/>
        public void GetAllInstNameAsync(string strJson, object userState)
        {
            if ((this.GetAllInstNameOperationCompleted == null))
            {
                this.GetAllInstNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllInstNameOperationCompleted);
            }
            this.InvokeAsync("GetAllInstName", new object[] {
                        strJson}, this.GetAllInstNameOperationCompleted, userState);
        }
        
        private void OnGetAllInstNameOperationCompleted(object arg)
        {
            if ((this.GetAllInstNameCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllInstNameCompleted(this, new GetAllInstNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetUserService", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public UserService GetUserService()
        {
            object[] results = this.Invoke("GetUserService", new object[0]);
            return ((UserService)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserService(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUserService", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public UserService EndGetUserService(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((UserService)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserServiceAsync()
        {
            this.GetUserServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetUserServiceAsync(object userState)
        {
            if ((this.GetUserServiceOperationCompleted == null))
            {
                this.GetUserServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserServiceOperationCompleted);
            }
            this.InvokeAsync("GetUserService", new object[0], this.GetUserServiceOperationCompleted, userState);
        }
        
        private void OnGetUserServiceOperationCompleted(object arg)
        {
            if ((this.GetUserServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserServiceCompleted(this, new GetUserServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetLogInfoService", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public EntityLogInfoService GetLogInfoService()
        {
            object[] results = this.Invoke("GetLogInfoService", new object[0]);
            return ((EntityLogInfoService)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetLogInfoService(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetLogInfoService", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public EntityLogInfoService EndGetLogInfoService(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((EntityLogInfoService)(results[0]));
        }
        
        /// <remarks/>
        public void GetLogInfoServiceAsync()
        {
            this.GetLogInfoServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetLogInfoServiceAsync(object userState)
        {
            if ((this.GetLogInfoServiceOperationCompleted == null))
            {
                this.GetLogInfoServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLogInfoServiceOperationCompleted);
            }
            this.InvokeAsync("GetLogInfoService", new object[0], this.GetLogInfoServiceOperationCompleted, userState);
        }
        
        private void OnGetLogInfoServiceOperationCompleted(object arg)
        {
            if ((this.GetLogInfoServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLogInfoServiceCompleted(this, new GetLogInfoServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetWitsMetaDataService", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public WitsMetaDataService GetWitsMetaDataService()
        {
            object[] results = this.Invoke("GetWitsMetaDataService", new object[0]);
            return ((WitsMetaDataService)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWitsMetaDataService(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetWitsMetaDataService", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public WitsMetaDataService EndGetWitsMetaDataService(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((WitsMetaDataService)(results[0]));
        }
        
        /// <remarks/>
        public void GetWitsMetaDataServiceAsync()
        {
            this.GetWitsMetaDataServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetWitsMetaDataServiceAsync(object userState)
        {
            if ((this.GetWitsMetaDataServiceOperationCompleted == null))
            {
                this.GetWitsMetaDataServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWitsMetaDataServiceOperationCompleted);
            }
            this.InvokeAsync("GetWitsMetaDataService", new object[0], this.GetWitsMetaDataServiceOperationCompleted, userState);
        }
        
        private void OnGetWitsMetaDataServiceOperationCompleted(object arg)
        {
            if ((this.GetWitsMetaDataServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWitsMetaDataServiceCompleted(this, new GetWitsMetaDataServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetRealDataService", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public RealDataService GetRealDataService()
        {
            object[] results = this.Invoke("GetRealDataService", new object[0]);
            return ((RealDataService)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRealDataService(System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRealDataService", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public RealDataService EndGetRealDataService(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((RealDataService)(results[0]));
        }
        
        /// <remarks/>
        public void GetRealDataServiceAsync()
        {
            this.GetRealDataServiceAsync(null);
        }
        
        /// <remarks/>
        public void GetRealDataServiceAsync(object userState)
        {
            if ((this.GetRealDataServiceOperationCompleted == null))
            {
                this.GetRealDataServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRealDataServiceOperationCompleted);
            }
            this.InvokeAsync("GetRealDataService", new object[0], this.GetRealDataServiceOperationCompleted, userState);
        }
        
        private void OnGetRealDataServiceOperationCompleted(object arg)
        {
            if ((this.GetRealDataServiceCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRealDataServiceCompleted(this, new GetRealDataServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:UserValid", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UserValid([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strUser, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strPassword, out bool @return, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool returnSpecified)
        {
            object[] results = this.Invoke("UserValid", new object[] {
                        strUser,
                        strPassword});
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUserValid(string strUser, string strPassword, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UserValid", new object[] {
                        strUser,
                        strPassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUserValid(System.IAsyncResult asyncResult, out bool @return, out bool returnSpecified)
        {
            object[] results = this.EndInvoke(asyncResult);
            @return = ((bool)(results[0]));
            returnSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void UserValidAsync(string strUser, string strPassword)
        {
            this.UserValidAsync(strUser, strPassword, null);
        }
        
        /// <remarks/>
        public void UserValidAsync(string strUser, string strPassword, object userState)
        {
            if ((this.UserValidOperationCompleted == null))
            {
                this.UserValidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserValidOperationCompleted);
            }
            this.InvokeAsync("UserValid", new object[] {
                        strUser,
                        strPassword}, this.UserValidOperationCompleted, userState);
        }
        
        private void OnUserValidOperationCompleted(object arg)
        {
            if ((this.UserValidCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserValidCompleted(this, new UserValidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetAllLogsByWellId", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetAllLogsByWellId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("GetAllLogsByWellId", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAllLogsByWellId(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetAllLogsByWellId", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetAllLogsByWellId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllLogsByWellIdAsync(string strJson)
        {
            this.GetAllLogsByWellIdAsync(strJson, null);
        }
        
        /// <remarks/>
        public void GetAllLogsByWellIdAsync(string strJson, object userState)
        {
            if ((this.GetAllLogsByWellIdOperationCompleted == null))
            {
                this.GetAllLogsByWellIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllLogsByWellIdOperationCompleted);
            }
            this.InvokeAsync("GetAllLogsByWellId", new object[] {
                        strJson}, this.GetAllLogsByWellIdOperationCompleted, userState);
        }
        
        private void OnGetAllLogsByWellIdOperationCompleted(object arg)
        {
            if ((this.GetAllLogsByWellIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllLogsByWellIdCompleted(this, new GetAllLogsByWellIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ReadCurveData", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string ReadCurveData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("ReadCurveData", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginReadCurveData(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ReadCurveData", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndReadCurveData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReadCurveDataAsync(string strJson)
        {
            this.ReadCurveDataAsync(strJson, null);
        }
        
        /// <remarks/>
        public void ReadCurveDataAsync(string strJson, object userState)
        {
            if ((this.ReadCurveDataOperationCompleted == null))
            {
                this.ReadCurveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadCurveDataOperationCompleted);
            }
            this.InvokeAsync("ReadCurveData", new object[] {
                        strJson}, this.ReadCurveDataOperationCompleted, userState);
        }
        
        private void OnReadCurveDataOperationCompleted(object arg)
        {
            if ((this.ReadCurveDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadCurveDataCompleted(this, new ReadCurveDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:GetErrorStr", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string GetErrorStr([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strMsg)
        {
            object[] results = this.Invoke("GetErrorStr", new object[] {
                        strMsg});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetErrorStr(string strMsg, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetErrorStr", new object[] {
                        strMsg}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetErrorStr(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetErrorStrAsync(string strMsg)
        {
            this.GetErrorStrAsync(strMsg, null);
        }
        
        /// <remarks/>
        public void GetErrorStrAsync(string strMsg, object userState)
        {
            if ((this.GetErrorStrOperationCompleted == null))
            {
                this.GetErrorStrOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetErrorStrOperationCompleted);
            }
            this.InvokeAsync("GetErrorStr", new object[] {
                        strMsg}, this.GetErrorStrOperationCompleted, userState);
        }
        
        private void OnGetErrorStrOperationCompleted(object arg)
        {
            if ((this.GetErrorStrCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetErrorStrCompleted(this, new GetErrorStrCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:DeleteInstData", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string DeleteInstData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("DeleteInstData", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteInstData(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteInstData", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndDeleteInstData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteInstDataAsync(string strJson)
        {
            this.DeleteInstDataAsync(strJson, null);
        }
        
        /// <remarks/>
        public void DeleteInstDataAsync(string strJson, object userState)
        {
            if ((this.DeleteInstDataOperationCompleted == null))
            {
                this.DeleteInstDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteInstDataOperationCompleted);
            }
            this.InvokeAsync("DeleteInstData", new object[] {
                        strJson}, this.DeleteInstDataOperationCompleted, userState);
        }
        
        private void OnDeleteInstDataOperationCompleted(object arg)
        {
            if ((this.DeleteInstDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteInstDataCompleted(this, new DeleteInstDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:WriteCurveData", RequestNamespace="http://services.realdb.lead", ResponseNamespace="http://services.realdb.lead", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string WriteCurveData([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string strJson)
        {
            object[] results = this.Invoke("WriteCurveData", new object[] {
                        strJson});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginWriteCurveData(string strJson, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("WriteCurveData", new object[] {
                        strJson}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndWriteCurveData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WriteCurveDataAsync(string strJson)
        {
            this.WriteCurveDataAsync(strJson, null);
        }
        
        /// <remarks/>
        public void WriteCurveDataAsync(string strJson, object userState)
        {
            if ((this.WriteCurveDataOperationCompleted == null))
            {
                this.WriteCurveDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWriteCurveDataOperationCompleted);
            }
            this.InvokeAsync("WriteCurveData", new object[] {
                        strJson}, this.WriteCurveDataOperationCompleted, userState);
        }
        
        private void OnWriteCurveDataOperationCompleted(object arg)
        {
            if ((this.WriteCurveDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WriteCurveDataCompleted(this, new WriteCurveDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.base.module.interdb.lead/xsd")]
    public partial class WellInfoService
    {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RealDataService))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(WitsMetaDataService))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.common.module.realdb.lead/xsd")]
    public partial class ServiceBase
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.common.module.realdb.lead/xsd")]
    public partial class RealDataService : ServiceBase
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://services.common.module.realdb.lead/xsd")]
    public partial class WitsMetaDataService : ServiceBase
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.permission.module.interdb.lead/xsd")]
    public partial class UserService
    {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://service.base.module.interdb.lead/xsd")]
    public partial class RegionService
    {
        
        private object allPositionRegionsField;
        
        private object allRegionsField;
        
        private string[] allRegionsId2CodeMapField;
        
        private string[] currentUserPermitFirstLevelRegionIdListField;
        
        private string[] currentUserPermitRegionIdListField;
        
        private string[] hasChildrenOnlyRegionIdsField;
        
        private string[] hasChildrenRegionIdsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object allPositionRegions
        {
            get
            {
                return this.allPositionRegionsField;
            }
            set
            {
                this.allPositionRegionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public object allRegions
        {
            get
            {
                return this.allRegionsField;
            }
            set
            {
                this.allRegionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("allRegionsId2CodeMap", IsNullable=true)]
        public string[] allRegionsId2CodeMap
        {
            get
            {
                return this.allRegionsId2CodeMapField;
            }
            set
            {
                this.allRegionsId2CodeMapField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("currentUserPermitFirstLevelRegionIdList", IsNullable=true)]
        public string[] currentUserPermitFirstLevelRegionIdList
        {
            get
            {
                return this.currentUserPermitFirstLevelRegionIdListField;
            }
            set
            {
                this.currentUserPermitFirstLevelRegionIdListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("currentUserPermitRegionIdList", IsNullable=true)]
        public string[] currentUserPermitRegionIdList
        {
            get
            {
                return this.currentUserPermitRegionIdListField;
            }
            set
            {
                this.currentUserPermitRegionIdListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hasChildrenOnlyRegionIds", IsNullable=true)]
        public string[] hasChildrenOnlyRegionIds
        {
            get
            {
                return this.hasChildrenOnlyRegionIdsField;
            }
            set
            {
                this.hasChildrenOnlyRegionIdsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("hasChildrenRegionIds", IsNullable=true)]
        public string[] hasChildrenRegionIds
        {
            get
            {
                return this.hasChildrenRegionIdsField;
            }
            set
            {
                this.hasChildrenRegionIdsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetAllRegionsCompletedEventHandler(object sender, GetAllRegionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRegionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetAllRegionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void AddLogCompletedEventHandler(object sender, AddLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal AddLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetSuccessStrCompletedEventHandler(object sender, GetSuccessStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSuccessStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetSuccessStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetIndexRangeCompletedEventHandler(object sender, GetIndexRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIndexRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetIndexRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetWellInfoServiceCompletedEventHandler(object sender, GetWellInfoServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWellInfoServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetWellInfoServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public WellInfoService Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((WellInfoService)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void AddWellCompletedEventHandler(object sender, AddWellCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddWellCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal AddWellCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetRegionInfoServiceCompletedEventHandler(object sender, GetRegionInfoServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegionInfoServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetRegionInfoServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public RegionService Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RegionService)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetInstInfoByNameCompletedEventHandler(object sender, GetInstInfoByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstInfoByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetInstInfoByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void AddInstInfoCompletedEventHandler(object sender, AddInstInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddInstInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal AddInstInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void AddRegionCompletedEventHandler(object sender, AddRegionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddRegionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal AddRegionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetAllWellsByRegionIdCompletedEventHandler(object sender, GetAllWellsByRegionIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllWellsByRegionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetAllWellsByRegionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetAllInstNameCompletedEventHandler(object sender, GetAllInstNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllInstNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetAllInstNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetUserServiceCompletedEventHandler(object sender, GetUserServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetUserServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public UserService Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((UserService)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetLogInfoServiceCompletedEventHandler(object sender, GetLogInfoServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLogInfoServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetLogInfoServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public EntityLogInfoService Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((EntityLogInfoService)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetWitsMetaDataServiceCompletedEventHandler(object sender, GetWitsMetaDataServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWitsMetaDataServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetWitsMetaDataServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public WitsMetaDataService Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((WitsMetaDataService)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetRealDataServiceCompletedEventHandler(object sender, GetRealDataServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRealDataServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetRealDataServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public RealDataService Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((RealDataService)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void UserValidCompletedEventHandler(object sender, UserValidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserValidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal UserValidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public bool @return
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool returnSpecified
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetAllLogsByWellIdCompletedEventHandler(object sender, GetAllLogsByWellIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllLogsByWellIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetAllLogsByWellIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void ReadCurveDataCompletedEventHandler(object sender, ReadCurveDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadCurveDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal ReadCurveDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void GetErrorStrCompletedEventHandler(object sender, GetErrorStrCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetErrorStrCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal GetErrorStrCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void DeleteInstDataCompletedEventHandler(object sender, DeleteInstDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteInstDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal DeleteInstDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    public delegate void WriteCurveDataCompletedEventHandler(object sender, WriteCurveDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("WebServiceProxyBuilder", "1.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WriteCurveDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        internal WriteCurveDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
